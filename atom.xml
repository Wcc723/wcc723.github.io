<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>卡斯伯 Blog - 前端，沒有極限</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wcc723.github.io/"/>
  <updated>2021-04-11T05:18:02.170Z</updated>
  <id>https://wcc723.github.io/</id>
  
  <author>
    <name>Wang Casper</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VSCode Prettier 整合 ESLint 自動排版</title>
    <link href="https://wcc723.github.io/development/2021/04/11/vscode-eslint-prettier/"/>
    <id>https://wcc723.github.io/development/2021/04/11/vscode-eslint-prettier/</id>
    <published>2021-04-10T16:00:00.000Z</published>
    <updated>2021-04-11T05:18:02.170Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;VSCode 中有一個非常不錯的格式化工具，可以透過一個按鍵將雜亂的程式碼排列的整整齊齊，無論是 HTML、CSS、JavaScript 均可以套用。而此工具稱為 “Prettier”，在 VSCode
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
      <category term="vue" scheme="https://wcc723.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue3 中使用 Event Bus</title>
    <link href="https://wcc723.github.io/development/2020/12/15/vue-3-mitt/"/>
    <id>https://wcc723.github.io/development/2020/12/15/vue-3-mitt/</id>
    <published>2020-12-14T16:00:00.000Z</published>
    <updated>2020-12-15T07:14:43.077Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Vue 2 中要進行跨元件通訊，除了 Vuex 以外的另一個常見手法是 Event Bus，對於小型專案來說 Event Bus 相當方便，僅需要 &lt;code&gt;$on&lt;/code&gt;、&lt;code&gt;$emit&lt;/code&gt; 兩個語法就能進行跨元件通訊。而 Vue 3 中移除了
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
      <category term="vue" scheme="https://wcc723.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>12 個前端愛用的 VSCode 擴充套件</title>
    <link href="https://wcc723.github.io/development/2020/12/13/vscode-extension/"/>
    <id>https://wcc723.github.io/development/2020/12/13/vscode-extension/</id>
    <published>2020-12-12T16:00:00.000Z</published>
    <updated>2020-12-13T01:19:24.197Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;工欲善其事，缺乏好工具必定壞脾氣。&lt;/p&gt;
&lt;p&gt;身為一名工程師，將文字編輯器打造出具個人風格也是理所當然的。VSCode 是現在主流的文字編輯器，也因為使用者相當多，沒有特別打理的情況不乏會有撞衫的情況：&lt;/p&gt;
&lt;p&gt;「你也是用 VSCode
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="vscode" scheme="https://wcc723.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Async function / Await 深度介紹</title>
    <link href="https://wcc723.github.io/development/2020/10/16/async-await/"/>
    <id>https://wcc723.github.io/development/2020/10/16/async-await/</id>
    <published>2020-10-15T16:00:00.000Z</published>
    <updated>2020-10-19T01:59:31.610Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;非同步在前端的做法不斷的在進行優化調整，先前介紹過 &lt;a href=&quot;https://wcc723.github.io/development/2020/02/16/all-new-promise/&quot;&gt;Promise&lt;/a&gt; 可以解決非同步過度巢狀的問題，而本篇要介紹的
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
      <category term="async" scheme="https://wcc723.github.io/tags/async/"/>
    
      <category term="await" scheme="https://wcc723.github.io/tags/await/"/>
    
  </entry>
  
  <entry>
    <title>VSCode JS 註解就是你的文件</title>
    <link href="https://wcc723.github.io/development/2020/10/13/vscode-intellisense/"/>
    <id>https://wcc723.github.io/development/2020/10/13/vscode-intellisense/</id>
    <published>2020-10-12T16:00:00.000Z</published>
    <updated>2020-10-13T02:37:58.141Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在使用文字編輯器時，你是否有以下狀況呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;搞不懂，為什麼文字編輯器總是沒跳提示&lt;/li&gt;
&lt;li&gt;函式庫沒有安裝插件就不知道如何輸入&lt;/li&gt;
&lt;li&gt;同事或過去自己寫的函式不知道在寫什麼，都要花上許多時間去理解&lt;/li&gt;
&lt;li&gt;想要為函式補充註
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="bootstrap" scheme="https://wcc723.github.io/tags/bootstrap/"/>
    
      <category term="scss" scheme="https://wcc723.github.io/tags/scss/"/>
    
  </entry>
  
  <entry>
    <title>純 CSS 毛玻璃特效 - backdrop-filter 屬性介紹</title>
    <link href="https://wcc723.github.io/development/2020/10/12/frosted-glass/"/>
    <id>https://wcc723.github.io/development/2020/10/12/frosted-glass/</id>
    <published>2020-10-11T16:00:00.000Z</published>
    <updated>2020-10-12T02:34:44.564Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;幾年前的 iOS、MacOS
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="bootstrap" scheme="https://wcc723.github.io/tags/bootstrap/"/>
    
      <category term="scss" scheme="https://wcc723.github.io/tags/scss/"/>
    
  </entry>
  
  <entry>
    <title>新手前端也不該犯的錯：圖片變形</title>
    <link href="https://wcc723.github.io/development/2020/10/11/img-cover/"/>
    <id>https://wcc723.github.io/development/2020/10/11/img-cover/</id>
    <published>2020-10-10T16:00:00.000Z</published>
    <updated>2020-10-11T01:43:12.822Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;網頁常見錯誤的之一：圖片比例變形&lt;/p&gt;
&lt;p&gt;當網頁有此錯誤時，會大大的降低網頁的畫面水平，如果是作為一個求職作品，也會被貼上 “不細心” 的標籤，本篇介紹幾種簡單的方式來解決此問題。&lt;/p&gt;
&lt;p&gt;以下是原始圖片（圖片來自於
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="bootstrap" scheme="https://wcc723.github.io/tags/bootstrap/"/>
    
      <category term="scss" scheme="https://wcc723.github.io/tags/scss/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap 5 格線的運作原理</title>
    <link href="https://wcc723.github.io/development/2020/10/10/bootstrap-5-grid-whats-new/"/>
    <id>https://wcc723.github.io/development/2020/10/10/bootstrap-5-grid-whats-new/</id>
    <published>2020-10-09T16:00:00.000Z</published>
    <updated>2020-10-10T01:27:18.558Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
&lt;link rel=&quot;stylesheet&quot;
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="bootstrap" scheme="https://wcc723.github.io/tags/bootstrap/"/>
    
      <category term="scss" scheme="https://wcc723.github.io/tags/scss/"/>
    
  </entry>
  
  <entry>
    <title>怎樣也不會失手的 Bootstrap 格線運用技巧</title>
    <link href="https://wcc723.github.io/development/2020/10/09/bootstrap-grid/"/>
    <id>https://wcc723.github.io/development/2020/10/09/bootstrap-grid/</id>
    <published>2020-10-08T16:00:00.000Z</published>
    <updated>2020-10-09T06:17:59.366Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap-4-grid@3.4.0/css/grid.min.css&quot;&gt;
&lt;style&gt;
.box {
  height: 100px;
 
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="bootstrap" scheme="https://wcc723.github.io/tags/bootstrap/"/>
    
      <category term="scss" scheme="https://wcc723.github.io/tags/scss/"/>
    
  </entry>
  
  <entry>
    <title>手把手自訂你的 Bootstrap 樣式</title>
    <link href="https://wcc723.github.io/development/2020/10/08/custom-bootstrap-style/"/>
    <id>https://wcc723.github.io/development/2020/10/08/custom-bootstrap-style/</id>
    <published>2020-10-07T16:00:00.000Z</published>
    <updated>2020-10-08T03:35:50.151Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Bootstrap
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="bootstrap" scheme="https://wcc723.github.io/tags/bootstrap/"/>
    
      <category term="scss" scheme="https://wcc723.github.io/tags/scss/"/>
    
  </entry>
  
  <entry>
    <title>JS - for 迴圈與 forEach 有什麼不同</title>
    <link href="https://wcc723.github.io/development/2020/10/05/js-for-loop-vs-for-each/"/>
    <id>https://wcc723.github.io/development/2020/10/05/js-for-loop-vs-for-each/</id>
    <published>2020-10-04T16:00:00.000Z</published>
    <updated>2020-10-05T06:23:35.428Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;過去，當有一個陣列的內容需要依序取值時，都會使用 &lt;code&gt;for...&lt;/code&gt; 迴圈(for loop)的形式將值一一取出，原始碼的結構如下：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JS 常見陣列方法 [push(), unshift(), pop(), shift(), splice(), reverse(), concat(), include(), indexOf(), join()]</title>
    <link href="https://wcc723.github.io/development/2020/10/04/js-array-methods/"/>
    <id>https://wcc723.github.io/development/2020/10/04/js-array-methods/</id>
    <published>2020-10-03T16:00:00.000Z</published>
    <updated>2020-10-04T11:54:31.274Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;本篇陣列方法是延伸過去寫的 &lt;a href=&quot;https://wcc723.github.io/javascript/2017/06/29/es6-native-array/&quot;&gt;JavaScript
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>AJAX 完整解說系列：輕鬆搞懂 HTTP 狀態碼（HTTP Status Code）</title>
    <link href="https://wcc723.github.io/development/2020/10/03/about-ajax-4/"/>
    <id>https://wcc723.github.io/development/2020/10/03/about-ajax-4/</id>
    <published>2020-10-02T16:00:00.000Z</published>
    <updated>2020-10-04T01:46:44.479Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;AJAX
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>AJAX 完整解說系列：使用 Chrome Devtools 檢視請求及回應</title>
    <link href="https://wcc723.github.io/development/2020/10/02/about-ajax-3/"/>
    <id>https://wcc723.github.io/development/2020/10/02/about-ajax-3/</id>
    <published>2020-10-01T16:00:00.000Z</published>
    <updated>2020-10-02T01:52:23.747Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;從上一篇內容我們介紹到 AJAX 都是由瀏覽器發出請求，伺服器則會依據請求的內容進行回應。所以在這之中的 “請求”、“回應” 都會夾帶著不同資源，供瀏覽器及伺服器進行辨識及運用，所以此篇就針對瀏覽器與伺服器溝通的內容進行說明，帶大家更深入的認識
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>AJAX 完整解說系列：新增、更新、刪除（POST/PATCH/DELETE）</title>
    <link href="https://wcc723.github.io/development/2020/10/01/about-ajax-2/"/>
    <id>https://wcc723.github.io/development/2020/10/01/about-ajax-2/</id>
    <published>2020-09-30T16:00:00.000Z</published>
    <updated>2020-10-01T02:08:30.783Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;AJAX 除了 GET 以外，其它幾個常見的請求方法通常都會對資料庫進行操作，尤其是 POST、PUT、PATCH 在發出請求的同時還會有附加資源傳送至伺服器。&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>AJAX 完整解說系列：基礎觀念</title>
    <link href="https://wcc723.github.io/development/2020/09/30/about-ajax/"/>
    <id>https://wcc723.github.io/development/2020/09/30/about-ajax/</id>
    <published>2020-09-29T16:00:00.000Z</published>
    <updated>2020-09-30T08:54:47.252Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;AJAX 全名是「Asynchronous JavaScript and XML」，在網頁上的功能主要是用於網頁前端與後端伺服器溝通的技術，也如同名稱一樣是透過 JavaScript
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>箭頭函式常見陷阱題</title>
    <link href="https://wcc723.github.io/development/2020/09/29/arrow-homework/"/>
    <id>https://wcc723.github.io/development/2020/09/29/arrow-homework/</id>
    <published>2020-09-28T16:00:00.000Z</published>
    <updated>2020-09-29T02:44:01.266Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;JavaScript ES6 以後加入了 ”箭頭函式“，就外觀看來它就像是一個縮寫，也因此許多新手會認為它是屬於傳統函式的縮寫形式；但其實不然，箭頭函式與傳統函式大不同，本篇僅列出最常見的 &lt;code&gt;this&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>透過練習題，摸熟 This 的運作</title>
    <link href="https://wcc723.github.io/development/2020/09/28/this-homework/"/>
    <id>https://wcc723.github.io/development/2020/09/28/this-homework/</id>
    <published>2020-09-27T16:00:00.000Z</published>
    <updated>2020-09-28T02:52:36.812Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;JavaScript 的 this 會隨著調用的方式不同影響其指向的不同（ES6 的箭頭函式定義也會影響指向），網路上已經提供相當多的資源介紹 &lt;code&gt;this&lt;/code&gt;
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>學好 this 前，先搞清楚 this 做什麼</title>
    <link href="https://wcc723.github.io/development/2020/09/27/why-this/"/>
    <id>https://wcc723.github.io/development/2020/09/27/why-this/</id>
    <published>2020-09-26T16:00:00.000Z</published>
    <updated>2020-09-27T01:45:55.343Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;過去到現在寫了很多 &lt;code&gt;this&lt;/code&gt; 相關的文章，如果沒有實際運用過 &lt;code&gt;this&lt;/code&gt; 的開發者可能會有疑惑「this 是不是只有在面試考題用到？」、「this 在實戰中會用到嗎？」、「為什麼要學 this？」。&lt;/p&gt;
&lt;p&gt;其實
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>閉包，原來這就是閉包啊！</title>
    <link href="https://wcc723.github.io/development/2020/09/26/js-closure/"/>
    <id>https://wcc723.github.io/development/2020/09/26/js-closure/</id>
    <published>2020-09-25T16:00:00.000Z</published>
    <updated>2020-09-26T01:29:40.488Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;閉包，是一個 JavaScript 很常聽到的觀念，雖然會在不知不覺應用到閉包的基本概念，進階的用法在實戰中不一定很常用到，但這卻是面試中非常常見的問題，主要原因是它牽扯到許多的觀念，如詞法作用域、記憶體等觀念。&lt;/p&gt;
&lt;h2 id=&quot;原來這就是閉包：詞法作用域&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
</feed>
