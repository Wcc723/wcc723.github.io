<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>卡斯伯 Blog - 前端，沒有極限</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wcc723.github.io/"/>
  <updated>2020-09-22T06:01:47.238Z</updated>
  <id>https://wcc723.github.io/</id>
  
  <author>
    <name>Wang Casper</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>呼叫函式時，到底有多少個參數 / 變數可供使用？</title>
    <link href="https://wcc723.github.io/development/2020/09/22/js-function/"/>
    <id>https://wcc723.github.io/development/2020/09/22/js-function/</id>
    <published>2020-09-21T16:00:00.000Z</published>
    <updated>2020-09-22T06:01:47.238Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;建立一個函式並呼叫時我們可以傳入一些參數，或者在這個參數中引用全域的變數，不過一個被呼叫的函式中究竟有多少可取用的變數或參數呢？&lt;/p&gt;
&lt;h2 id=&quot;函式中的可用變數&quot;&gt;&lt;a href=&quot;#函式中的可用變數&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>讓我們一起到達終點！超過 60% 完課率的直播課程 - JavaScript 作品實戰直播班</title>
    <link href="https://wcc723.github.io/development/2020/09/22/javascript-training-1st/"/>
    <id>https://wcc723.github.io/development/2020/09/22/javascript-training-1st/</id>
    <published>2020-09-21T16:00:00.000Z</published>
    <updated>2020-09-22T03:51:27.172Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;2020 年 9 月 20 日是 「JavaScript
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
      <category term="courses" scheme="https://wcc723.github.io/tags/courses/"/>
    
  </entry>
  
  <entry>
    <title>JS 物件名詞解釋及常見觀念問題</title>
    <link href="https://wcc723.github.io/development/2020/09/21/js-object/"/>
    <id>https://wcc723.github.io/development/2020/09/21/js-object/</id>
    <published>2020-09-20T16:00:00.000Z</published>
    <updated>2020-09-21T06:44:45.500Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;接下來來到 JavaScript 另一個坑「物件」。&lt;/p&gt;
&lt;h2 id=&quot;物件的定義方法差在哪？&quot;&gt;&lt;a href=&quot;#物件的定義方法差在哪？&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JS 加不加分號差在哪？</title>
    <link href="https://wcc723.github.io/development/2020/09/20/js-semi/"/>
    <id>https://wcc723.github.io/development/2020/09/20/js-semi/</id>
    <published>2020-09-19T16:00:00.000Z</published>
    <updated>2020-09-20T01:52:16.269Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;這個議題許多論壇、文件都有討論，在 ESlint 的規範中也可從加不加分號區分為兩大派系，至於加不加分號關鍵點則需要了解分號對於 JavaScript 的影響，開始之前可以先看看以下題目。&lt;/p&gt;
&lt;p&gt;下方程式碼的運行預期為：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;宣告
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>開發總是沒問題，上線老是各種錯</title>
    <link href="https://wcc723.github.io/development/2020/09/19/js-expression-3/"/>
    <id>https://wcc723.github.io/development/2020/09/19/js-expression-3/</id>
    <published>2020-09-18T16:00:00.000Z</published>
    <updated>2020-09-19T02:09:28.177Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;不果是新手或老手都可能遇過這樣的狀況，程式碼在測試時運作上看起來都很正常，雖然有一些些地方還不是很熟悉，不過&lt;strong&gt;打從心裡&lt;/strong&gt;認定它是正確的，但麻煩卻上線後才發現出錯，仔細檢查也看不出任何問題，殊不知是表達式的觀念錯誤。&lt;/p&gt;
&lt;p&gt;程式碼的問題千
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 利用表達式優化你的程式碼</title>
    <link href="https://wcc723.github.io/development/2020/09/18/js-expression-2/"/>
    <id>https://wcc723.github.io/development/2020/09/18/js-expression-2/</id>
    <published>2020-09-17T16:00:00.000Z</published>
    <updated>2020-09-18T02:20:45.875Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;上一節介紹了表達式的基本概念「回傳結果」，那麼接下來你一定會想了解有哪些地方可以用到表達式，本篇就列出 JS 語法與常見框架的表達式運用，熟悉以後將會大幅增加 JS 語法的變化性。&lt;/p&gt;
&lt;h2 id=&quot;運算子&quot;&gt;&lt;a href=&quot;#運算子&quot;
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 表達式觀念及運用 - JS Expression</title>
    <link href="https://wcc723.github.io/development/2020/09/17/js-expression/"/>
    <id>https://wcc723.github.io/development/2020/09/17/js-expression/</id>
    <published>2020-09-16T16:00:00.000Z</published>
    <updated>2020-09-17T01:41:18.433Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;JavaScript 分為兩大的語句類型，就像是我們日常語言中的動詞、名詞、連接詞等概念，但在 JS
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 開發中常見錯誤解決辦法</title>
    <link href="https://wcc723.github.io/development/2020/09/16/chrome-js-alert/"/>
    <id>https://wcc723.github.io/development/2020/09/16/chrome-js-alert/</id>
    <published>2020-09-15T16:00:00.000Z</published>
    <updated>2020-09-16T03:25:46.038Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;身為一個開發者，當然都會了解經驗越多，除錯上會更為容易，這種事情你我都清楚。但對於一個新手來就是缺少錯誤上的經驗，所以當遇到紅字時會不知如何著手。&lt;/p&gt;
&lt;p&gt;這一系列的文章是專門給剛入門新手的前端開發者觀看的，盡可能用白話的方式，並且提供簡單的範例程式碼以供驗證。&lt;/p
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>完全解析 JavaScript import、export</title>
    <link href="https://wcc723.github.io/development/2020/03/25/import-export/"/>
    <id>https://wcc723.github.io/development/2020/03/25/import-export/</id>
    <published>2020-03-24T16:00:00.000Z</published>
    <updated>2020-03-25T07:54:53.289Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;code&gt;import&lt;/code&gt;、&lt;code&gt;export&lt;/code&gt; 是 JavaScript 模組管理的方法，可以將每個檔案視為一個獨立的模組匯出，並在另一個檔案匯入使用。透過此方式每個檔案更能專注在特定的功能上，且能避免單一檔案過度龐大。&lt;/p&gt;
&lt;h3
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
      <category term="modules" scheme="https://wcc723.github.io/tags/modules/"/>
    
  </entry>
  
  <entry>
    <title>開公司的流程及雷點分享</title>
    <link href="https://wcc723.github.io/business/2020/03/18/how-to-register-a-company/"/>
    <id>https://wcc723.github.io/business/2020/03/18/how-to-register-a-company/</id>
    <published>2020-03-17T16:00:00.000Z</published>
    <updated>2020-03-20T05:44:22.787Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;這次跟大家分享開公司上的一些心得，由於網路上可以找到許多開公司的流程，本篇會著重在心得的分享，當然我也並非專業的會計、法務，正確的流程建議可以詢問合作的會計。&lt;/p&gt;
&lt;h2 id=&quot;會計&quot;&gt;&lt;a href=&quot;#會計&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="business" scheme="https://wcc723.github.io/categories/business/"/>
    
    
      <category term="business" scheme="https://wcc723.github.io/tags/business/"/>
    
  </entry>
  
  <entry>
    <title>Flex 空間計算規則</title>
    <link href="https://wcc723.github.io/css/2020/03/08/flex-size/"/>
    <id>https://wcc723.github.io/css/2020/03/08/flex-size/</id>
    <published>2020-03-07T16:00:00.000Z</published>
    <updated>2020-03-08T05:42:31.104Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;此篇是延續先前的 Flex 的文章（&lt;a href=&quot;/css/2017/07/21/css-flex/&quot;&gt;圖解：CSS Flex 屬性一點也不難&lt;/a&gt;），本篇則是著重在 flex 中的
        
      
    
    </summary>
    
      <category term="css" scheme="https://wcc723.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>爬蟲、E2E 測試兩相宜的好工具 - Puppeteer</title>
    <link href="https://wcc723.github.io/development/2020/03/01/puppeteer/"/>
    <id>https://wcc723.github.io/development/2020/03/01/puppeteer/</id>
    <published>2020-02-29T16:00:00.000Z</published>
    <updated>2020-03-01T05:39:29.386Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Puppeteer 是 Node.js 的函式庫，它提供各種 API 來控制 Chrome 或 Chromium 瀏覽器，而此瀏覽器也是目前主流的瀏覽器，用來做為測試、爬蟲都相當合適，並且所提供的 API 語法淺顯易懂，只要具有 jQuery
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="test" scheme="https://wcc723.github.io/tags/test/"/>
    
      <category term="puppeteer" scheme="https://wcc723.github.io/tags/puppeteer/"/>
    
  </entry>
  
  <entry>
    <title>CSS Border 運用技巧（手繪框線、三角形、空間運用）</title>
    <link href="https://wcc723.github.io/css/2020/02/21/css-border/"/>
    <id>https://wcc723.github.io/css/2020/02/21/css-border/</id>
    <published>2020-02-20T16:00:00.000Z</published>
    <updated>2020-02-23T03:27:20.055Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;CSS Border 大部份來說是用在裝飾上，卡片的邊線、hover 的視覺效果、物件之間的間隔等等，這些視覺效果除了 Border 以外亦有其它方式可以達到；雖然如此，Border
        
      
    
    </summary>
    
      <category term="css" scheme="https://wcc723.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="border" scheme="https://wcc723.github.io/tags/border/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript Promise 全介紹</title>
    <link href="https://wcc723.github.io/development/2020/02/16/all-new-promise/"/>
    <id>https://wcc723.github.io/development/2020/02/16/all-new-promise/</id>
    <published>2020-02-15T16:00:00.000Z</published>
    <updated>2020-03-06T08:25:47.043Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近直播介紹如何串接開源資料，也剛好許多朋友詢問到 Ajax、Promise 相關的問題，因此重新撰寫一篇文來介紹 Promise，這篇文章也與過去形勢不太一樣，試著先將常見的問題放在前頭，接下來才開始介紹
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="javascript" scheme="https://wcc723.github.io/tags/javascript/"/>
    
      <category term="js" scheme="https://wcc723.github.io/tags/js/"/>
    
      <category term="promise" scheme="https://wcc723.github.io/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>單元測試 - 非同步及 Ajax</title>
    <link href="https://wcc723.github.io/development/2020/02/09/jest-async/"/>
    <id>https://wcc723.github.io/development/2020/02/09/jest-async/</id>
    <published>2020-02-08T16:00:00.000Z</published>
    <updated>2020-02-09T06:22:08.215Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;本篇延續上一篇：&lt;a href=&quot;/development/2020/02/02/jest-intro/&quot;&gt;十分鐘上手前端單元測試 - 使用 Jest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="test" scheme="https://wcc723.github.io/tags/test/"/>
    
      <category term="jest" scheme="https://wcc723.github.io/tags/jest/"/>
    
  </entry>
  
  <entry>
    <title>十分鐘上手前端單元測試 - 使用 Jest</title>
    <link href="https://wcc723.github.io/development/2020/02/02/jest-intro/"/>
    <id>https://wcc723.github.io/development/2020/02/02/jest-intro/</id>
    <published>2020-02-01T16:00:00.000Z</published>
    <updated>2020-02-02T13:46:18.534Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;隨著應用程式越來越大，人工流程的測試也會耗去許多的時間，許多功能再開發後都必須重新進行點擊特定目標、撰寫複雜表單、送出來檢驗功能的正確性，當功能越來越複雜時，人工測試所花的時間也會越來越常，因此改用測試工具相對會節省去許多時間。尤其到了上線時才發現錯誤，那時候心中真的會吶喊
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="test" scheme="https://wcc723.github.io/tags/test/"/>
    
      <category term="jest" scheme="https://wcc723.github.io/tags/jest/"/>
    
  </entry>
  
  <entry>
    <title>前端開發者，圖片常犯的五個粗心錯誤</title>
    <link href="https://wcc723.github.io/development/2020/01/04/image-common-mistakes/"/>
    <id>https://wcc723.github.io/development/2020/01/04/image-common-mistakes/</id>
    <published>2020-01-03T16:00:00.000Z</published>
    <updated>2020-01-05T23:54:19.954Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;前端開發者是透過程式碼將資訊呈現成畫面，因此畫面的好壞也多少影響品質，在觀看許多履歷或作業的過程中，會發現許多相似的錯誤，而這些錯誤都是有跡可循，並且可以避免的；本篇先以常見的圖片問題與大家分享，看是否你也犯了這些錯誤呢？&lt;/p&gt;
&lt;h2 id=&quot;一、圖片變形&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="html" scheme="https://wcc723.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>CSS 技巧：精簡語法操作暗色主題 - CSS Dark Mode</title>
    <link href="https://wcc723.github.io/css/2019/12/22/css-dark-mode/"/>
    <id>https://wcc723.github.io/css/2019/12/22/css-dark-mode/</id>
    <published>2019-12-21T16:00:00.000Z</published>
    <updated>2019-12-22T13:04:00.023Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Mac
        
      
    
    </summary>
    
      <category term="css" scheme="https://wcc723.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://wcc723.github.io/tags/css/"/>
    
      <category term="develop" scheme="https://wcc723.github.io/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title>一分鐘切換成中文版 VSCode（完整圖文版）</title>
    <link href="https://wcc723.github.io/development/2019/12/01/vscode-chinese/"/>
    <id>https://wcc723.github.io/development/2019/12/01/vscode-chinese/</id>
    <published>2019-11-30T16:00:00.000Z</published>
    <updated>2019-12-22T03:55:53.582Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;雖然開發者都具有一定的英文閱讀能力，但如果在不熟悉的情況下，就比較難以快速上手一個新工具。如果要快速掌握一個完整的工具或技術，最好的方式還是先切換成熟悉的語言。&lt;/p&gt;
&lt;p&gt;而 VSCode
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="develop" scheme="https://wcc723.github.io/tags/develop/"/>
    
      <category term="vscode" scheme="https://wcc723.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>十分鐘快速掌握 Markdown</title>
    <link href="https://wcc723.github.io/development/2019/11/23/ten-mins-learn-markdown/"/>
    <id>https://wcc723.github.io/development/2019/11/23/ten-mins-learn-markdown/</id>
    <published>2019-11-22T16:00:00.000Z</published>
    <updated>2019-11-23T03:35:10.315Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Markdown 是目前非常普遍用來撰寫文檔的語言，一開始的目標就是使用「易讀易寫的純文字格式編寫文件」，此初衷讓使用者可以專注在文字的本身，而不需要透過其它工具來切換格式。以 Word
        
      
    
    </summary>
    
      <category term="development" scheme="https://wcc723.github.io/categories/development/"/>
    
    
      <category term="markdown" scheme="https://wcc723.github.io/tags/markdown/"/>
    
      <category term="develop" scheme="https://wcc723.github.io/tags/develop/"/>
    
  </entry>
  
</feed>
