<script>
  /***
   * 側欄選單滾動行為
   */
  ;(() => {
    const h2 = [...document.querySelectorAll('.article-inner h2')];
    const h3 = [...document.querySelectorAll('.article-inner h3')];
    let currentHeading = '';
    let currentHeadingLv3 = '';
    // 確保至少有 h2 文章列表才運行
    if (h2.length) {
      const tocListLevel3 = [...document.querySelectorAll('.toc-level-2 > ol')]
      const tocListLink = [...document.querySelectorAll('.toc-level-2 a')]
      const tocListLinkLv3 = [...document.querySelectorAll('.toc-level-3 a')]
      tocListLevel3.forEach(item => item.classList.add('d-none'));

      window.addEventListener('scroll', function () {
        const headings = h2.map((item) => ({
          uri: encodeURI(item.id),
          id: item.id,
          offsetTop: item.offsetTop,
        })).reverse(); // 由後往前找
        const headingsLevel3 = h3.map((item) => ({
          uri: encodeURI(item.id),
          id: item.id,
          offsetTop: item.offsetTop,
        })).reverse();

        const windowY = window.scrollY;
        // console.log(headings, windowY);
        const findTarget = headings.find(item => windowY + 60 > item.offsetTop);
        const findTargetLv3 = headingsLevel3.find(item => windowY + 60 > item.offsetTop);
        // console.log(findTarget);
        if (findTarget && findTarget.id !== currentHeading) {
          currentHeading = findTarget.id;
          const tocLink = document.querySelector(`a.toc-link[href="#${findTarget.uri}"]`);
          tocListLevel3.forEach(item => item.classList.add('d-none'));
          tocListLink.forEach(item => item.classList.remove('active'));
          tocLink.classList.add('active');
          location.hash = findTarget.uri;
        }
        if (findTargetLv3 && findTargetLv3.id !== currentHeadingLv3) {
          // console.log('findTargetLv3', findTargetLv3);
          const tocLink = document.querySelector(`a.toc-link[href="#${findTargetLv3.uri}"]`);
          tocListLinkLv3.forEach(item => item.classList.remove('active'));
          tocLink.classList.add('active');
          location.hash = findTarget.uri;
        }


      });
    }
  })();
</script>

<style>
    .toc-component ol {
        list-style: none;
        padding-left: 0;
    }

    .toc-component > ol > li {
        margin-bottom: .5rem;
    }

    a.toc-link {
        color: var(--bs-gray);
    }

    a.toc-link.active {
        font-weight: bolder;
        color: var(--bs-primary);
    }

    .toc-link.active + ol {
        display: block !important;
    }

    .toc-component ol ol {
        margin-left: 1rem;
    }

    .toc-component ol ol li {
        padding-left: 1rem;
    }

    .toc-component ol ol li::before {
        content: "-";
        color: var(--bs-gray);
        position: absolute;
        margin-left: -1rem;
    }
</style>
